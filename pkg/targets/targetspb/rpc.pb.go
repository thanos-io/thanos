// Copyright (c) The Thanos Authors.
// Licensed under the Apache License 2.0.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.0
// source: targets/targetspb/rpc.proto

package targetspb

import (
	reflect "reflect"
	sync "sync"

	rulespb "github.com/thanos-io/thanos/pkg/rules/rulespb"
	labelpb "github.com/thanos-io/thanos/pkg/store/labelpb"
	storepb "github.com/thanos-io/thanos/pkg/store/storepb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TargetHealth int32

const (
	TargetHealth_DOWN    TargetHealth = 0
	TargetHealth_UP      TargetHealth = 1
	TargetHealth_UNKNOWN TargetHealth = 2
)

// Enum value maps for TargetHealth.
var (
	TargetHealth_name = map[int32]string{
		0: "DOWN",
		1: "UP",
		2: "UNKNOWN",
	}
	TargetHealth_value = map[string]int32{
		"DOWN":    0,
		"UP":      1,
		"UNKNOWN": 2,
	}
)

func (x TargetHealth) Enum() *TargetHealth {
	p := new(TargetHealth)
	*p = x
	return p
}

func (x TargetHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_targets_targetspb_rpc_proto_enumTypes[0].Descriptor()
}

func (TargetHealth) Type() protoreflect.EnumType {
	return &file_targets_targetspb_rpc_proto_enumTypes[0]
}

func (x TargetHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetHealth.Descriptor instead.
func (TargetHealth) EnumDescriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{0}
}

type TargetsRequest_State int32

const (
	TargetsRequest_ANY TargetsRequest_State = 0
	// / This will make sure strings.ToLower(.String()) will match 'active' and 'dropped' values for
	// / Prometheus HTTP API.
	TargetsRequest_ACTIVE  TargetsRequest_State = 1
	TargetsRequest_DROPPED TargetsRequest_State = 2
)

// Enum value maps for TargetsRequest_State.
var (
	TargetsRequest_State_name = map[int32]string{
		0: "ANY",
		1: "ACTIVE",
		2: "DROPPED",
	}
	TargetsRequest_State_value = map[string]int32{
		"ANY":     0,
		"ACTIVE":  1,
		"DROPPED": 2,
	}
)

func (x TargetsRequest_State) Enum() *TargetsRequest_State {
	p := new(TargetsRequest_State)
	*p = x
	return p
}

func (x TargetsRequest_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TargetsRequest_State) Descriptor() protoreflect.EnumDescriptor {
	return file_targets_targetspb_rpc_proto_enumTypes[1].Descriptor()
}

func (TargetsRequest_State) Type() protoreflect.EnumType {
	return &file_targets_targetspb_rpc_proto_enumTypes[1]
}

func (x TargetsRequest_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TargetsRequest_State.Descriptor instead.
func (TargetsRequest_State) EnumDescriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{0, 0}
}

type TargetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                   TargetsRequest_State            `protobuf:"varint,1,opt,name=state,proto3,enum=thanos.TargetsRequest_State" json:"state,omitempty"`
	PartialResponseStrategy storepb.PartialResponseStrategy `protobuf:"varint,2,opt,name=partial_response_strategy,json=partialResponseStrategy,proto3,enum=thanos.PartialResponseStrategy" json:"partial_response_strategy,omitempty"`
}

func (x *TargetsRequest) Reset() {
	*x = TargetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_targets_targetspb_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsRequest) ProtoMessage() {}

func (x *TargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_targets_targetspb_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsRequest.ProtoReflect.Descriptor instead.
func (*TargetsRequest) Descriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *TargetsRequest) GetState() TargetsRequest_State {
	if x != nil {
		return x.State
	}
	return TargetsRequest_ANY
}

func (x *TargetsRequest) GetPartialResponseStrategy() storepb.PartialResponseStrategy {
	if x != nil {
		return x.PartialResponseStrategy
	}
	return storepb.PartialResponseStrategy(0)
}

type TargetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*TargetsResponse_Targets
	//	*TargetsResponse_Warning
	Result isTargetsResponse_Result `protobuf_oneof:"result"`
}

func (x *TargetsResponse) Reset() {
	*x = TargetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_targets_targetspb_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsResponse) ProtoMessage() {}

func (x *TargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_targets_targetspb_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsResponse.ProtoReflect.Descriptor instead.
func (*TargetsResponse) Descriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{1}
}

func (m *TargetsResponse) GetResult() isTargetsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *TargetsResponse) GetTargets() *TargetDiscovery {
	if x, ok := x.GetResult().(*TargetsResponse_Targets); ok {
		return x.Targets
	}
	return nil
}

func (x *TargetsResponse) GetWarning() string {
	if x, ok := x.GetResult().(*TargetsResponse_Warning); ok {
		return x.Warning
	}
	return ""
}

type isTargetsResponse_Result interface {
	isTargetsResponse_Result()
}

type TargetsResponse_Targets struct {
	// / structure with targets. It is up to server implementation to decide how many of those to put here within single frame.
	Targets *TargetDiscovery `protobuf:"bytes,1,opt,name=targets,proto3,oneof"`
}

type TargetsResponse_Warning struct {
	// / warning is considered an information piece in place of series for warning purposes.
	// / It is used to warn rule API users about suspicious cases or partial response (if enabled).
	Warning string `protobuf:"bytes,2,opt,name=warning,proto3,oneof"`
}

func (*TargetsResponse_Targets) isTargetsResponse_Result() {}

func (*TargetsResponse_Warning) isTargetsResponse_Result() {}

type TargetDiscovery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"activeTargets"
	ActiveTargets []*ActiveTarget `protobuf:"bytes,1,rep,name=activeTargets,proto3" json:"activeTargets"`
	// @gotags: json:"droppedTargets"
	DroppedTargets []*DroppedTarget `protobuf:"bytes,2,rep,name=droppedTargets,proto3" json:"droppedTargets"`
}

func (x *TargetDiscovery) Reset() {
	*x = TargetDiscovery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_targets_targetspb_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetDiscovery) ProtoMessage() {}

func (x *TargetDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_targets_targetspb_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetDiscovery.ProtoReflect.Descriptor instead.
func (*TargetDiscovery) Descriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *TargetDiscovery) GetActiveTargets() []*ActiveTarget {
	if x != nil {
		return x.ActiveTargets
	}
	return nil
}

func (x *TargetDiscovery) GetDroppedTargets() []*DroppedTarget {
	if x != nil {
		return x.DroppedTargets
	}
	return nil
}

type ActiveTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"discoveredLabels"
	DiscoveredLabels *labelpb.LabelSet `protobuf:"bytes,1,opt,name=discoveredLabels,proto3" json:"discoveredLabels"`
	// @gotags: json:"labels"
	Labels *labelpb.LabelSet `protobuf:"bytes,2,opt,name=labels,proto3" json:"labels"`
	// @gotags: json:"scrapePool"
	ScrapePool string `protobuf:"bytes,3,opt,name=scrapePool,proto3" json:"scrapePool"`
	// @gotags: json:"scrapeUrl"
	ScrapeUrl string `protobuf:"bytes,4,opt,name=scrapeUrl,proto3" json:"scrapeUrl"`
	// @gotags: json:"globalUrl"
	GlobalUrl string `protobuf:"bytes,5,opt,name=globalUrl,proto3" json:"globalUrl"`
	// @gotags: json:"lastError"
	LastError string `protobuf:"bytes,6,opt,name=lastError,proto3" json:"lastError"`
	// @gotags: json:"lastScrape"
	LastScrape *rulespb.Timestamp `protobuf:"bytes,7,opt,name=lastScrape,proto3" json:"lastScrape"`
	// @gotags: json:"lastScrapeDuration"
	LastScrapeDuration float64 `protobuf:"fixed64,8,opt,name=lastScrapeDuration,proto3" json:"lastScrapeDuration"`
	// @gotags: json:"health"
	Health TargetHealth `protobuf:"varint,9,opt,name=health,proto3,enum=thanos.TargetHealth" json:"health"`
}

func (x *ActiveTarget) Reset() {
	*x = ActiveTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_targets_targetspb_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveTarget) ProtoMessage() {}

func (x *ActiveTarget) ProtoReflect() protoreflect.Message {
	mi := &file_targets_targetspb_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveTarget.ProtoReflect.Descriptor instead.
func (*ActiveTarget) Descriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *ActiveTarget) GetDiscoveredLabels() *labelpb.LabelSet {
	if x != nil {
		return x.DiscoveredLabels
	}
	return nil
}

func (x *ActiveTarget) GetLabels() *labelpb.LabelSet {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ActiveTarget) GetScrapePool() string {
	if x != nil {
		return x.ScrapePool
	}
	return ""
}

func (x *ActiveTarget) GetScrapeUrl() string {
	if x != nil {
		return x.ScrapeUrl
	}
	return ""
}

func (x *ActiveTarget) GetGlobalUrl() string {
	if x != nil {
		return x.GlobalUrl
	}
	return ""
}

func (x *ActiveTarget) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *ActiveTarget) GetLastScrape() *rulespb.Timestamp {
	if x != nil {
		return x.LastScrape
	}
	return nil
}

func (x *ActiveTarget) GetLastScrapeDuration() float64 {
	if x != nil {
		return x.LastScrapeDuration
	}
	return 0
}

func (x *ActiveTarget) GetHealth() TargetHealth {
	if x != nil {
		return x.Health
	}
	return TargetHealth_DOWN
}

type DroppedTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"discoveredLabels"
	DiscoveredLabels *labelpb.LabelSet `protobuf:"bytes,1,opt,name=discoveredLabels,proto3" json:"discoveredLabels"`
}

func (x *DroppedTarget) Reset() {
	*x = DroppedTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_targets_targetspb_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DroppedTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedTarget) ProtoMessage() {}

func (x *DroppedTarget) ProtoReflect() protoreflect.Message {
	mi := &file_targets_targetspb_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedTarget.ProtoReflect.Descriptor instead.
func (*DroppedTarget) Descriptor() ([]byte, []int) {
	return file_targets_targetspb_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *DroppedTarget) GetDiscoveredLabels() *labelpb.LabelSet {
	if x != nil {
		return x.DiscoveredLabels
	}
	return nil
}

var File_targets_targetspb_rpc_proto protoreflect.FileDescriptor

var file_targets_targetspb_rpc_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74,
	0x68, 0x61, 0x6e, 0x6f, 0x73, 0x1a, 0x19, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x70, 0x62, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5b, 0x0a, 0x19, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x17, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x29, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x4f, 0x50, 0x50, 0x45,
	0x44, 0x10, 0x02, 0x22, 0x6c, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x68, 0x61, 0x6e,
	0x6f, 0x73, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x22, 0x81, 0x03, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x3c, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x68,
	0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x10, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x28, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x63, 0x72, 0x61, 0x70, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x2a, 0x2d, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x02, 0x32, 0x47, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x3c, 0x0a,
	0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73,
	0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_targets_targetspb_rpc_proto_rawDescOnce sync.Once
	file_targets_targetspb_rpc_proto_rawDescData = file_targets_targetspb_rpc_proto_rawDesc
)

func file_targets_targetspb_rpc_proto_rawDescGZIP() []byte {
	file_targets_targetspb_rpc_proto_rawDescOnce.Do(func() {
		file_targets_targetspb_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_targets_targetspb_rpc_proto_rawDescData)
	})
	return file_targets_targetspb_rpc_proto_rawDescData
}

var file_targets_targetspb_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_targets_targetspb_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_targets_targetspb_rpc_proto_goTypes = []any{
	(TargetHealth)(0),                    // 0: thanos.TargetHealth
	(TargetsRequest_State)(0),            // 1: thanos.TargetsRequest.State
	(*TargetsRequest)(nil),               // 2: thanos.TargetsRequest
	(*TargetsResponse)(nil),              // 3: thanos.TargetsResponse
	(*TargetDiscovery)(nil),              // 4: thanos.TargetDiscovery
	(*ActiveTarget)(nil),                 // 5: thanos.ActiveTarget
	(*DroppedTarget)(nil),                // 6: thanos.DroppedTarget
	(storepb.PartialResponseStrategy)(0), // 7: thanos.PartialResponseStrategy
	(*labelpb.LabelSet)(nil),             // 8: thanos.LabelSet
	(*rulespb.Timestamp)(nil),            // 9: thanos.Timestamp
}
var file_targets_targetspb_rpc_proto_depIdxs = []int32{
	1,  // 0: thanos.TargetsRequest.state:type_name -> thanos.TargetsRequest.State
	7,  // 1: thanos.TargetsRequest.partial_response_strategy:type_name -> thanos.PartialResponseStrategy
	4,  // 2: thanos.TargetsResponse.targets:type_name -> thanos.TargetDiscovery
	5,  // 3: thanos.TargetDiscovery.activeTargets:type_name -> thanos.ActiveTarget
	6,  // 4: thanos.TargetDiscovery.droppedTargets:type_name -> thanos.DroppedTarget
	8,  // 5: thanos.ActiveTarget.discoveredLabels:type_name -> thanos.LabelSet
	8,  // 6: thanos.ActiveTarget.labels:type_name -> thanos.LabelSet
	9,  // 7: thanos.ActiveTarget.lastScrape:type_name -> thanos.Timestamp
	0,  // 8: thanos.ActiveTarget.health:type_name -> thanos.TargetHealth
	8,  // 9: thanos.DroppedTarget.discoveredLabels:type_name -> thanos.LabelSet
	2,  // 10: thanos.Targets.Targets:input_type -> thanos.TargetsRequest
	3,  // 11: thanos.Targets.Targets:output_type -> thanos.TargetsResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_targets_targetspb_rpc_proto_init() }
func file_targets_targetspb_rpc_proto_init() {
	if File_targets_targetspb_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_targets_targetspb_rpc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TargetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_targets_targetspb_rpc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TargetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_targets_targetspb_rpc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TargetDiscovery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_targets_targetspb_rpc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ActiveTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_targets_targetspb_rpc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DroppedTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_targets_targetspb_rpc_proto_msgTypes[1].OneofWrappers = []any{
		(*TargetsResponse_Targets)(nil),
		(*TargetsResponse_Warning)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_targets_targetspb_rpc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_targets_targetspb_rpc_proto_goTypes,
		DependencyIndexes: file_targets_targetspb_rpc_proto_depIdxs,
		EnumInfos:         file_targets_targetspb_rpc_proto_enumTypes,
		MessageInfos:      file_targets_targetspb_rpc_proto_msgTypes,
	}.Build()
	File_targets_targetspb_rpc_proto = out.File
	file_targets_targetspb_rpc_proto_rawDesc = nil
	file_targets_targetspb_rpc_proto_goTypes = nil
	file_targets_targetspb_rpc_proto_depIdxs = nil
}
