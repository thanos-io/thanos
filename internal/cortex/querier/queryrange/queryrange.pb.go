// Copyright (c) The Cortex Authors.
// Licensed under the Apache License 2.0.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.0
// source: cortex/querier/queryrange/queryrange.proto

package queryrange

import (
	reflect "reflect"
	sync "sync"

	cortexpb "github.com/thanos-io/thanos/internal/cortex/cortexpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrometheusRequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"-"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"-"`
	// @gotags: json:"-"
	Values []string `protobuf:"bytes,2,rep,name=Values,proto3" json:"-"`
}

func (x *PrometheusRequestHeader) Reset() {
	*x = PrometheusRequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusRequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusRequestHeader) ProtoMessage() {}

func (x *PrometheusRequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusRequestHeader.ProtoReflect.Descriptor instead.
func (*PrometheusRequestHeader) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{0}
}

func (x *PrometheusRequestHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrometheusRequestHeader) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type PrometheusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Start          int64           `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End            int64           `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	Step           int64           `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	Timeout        *Duration       `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Query          string          `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	CachingOptions *CachingOptions `protobuf:"bytes,7,opt,name=cachingOptions,proto3" json:"cachingOptions,omitempty"`
	// @gotags: json:"-"
	Headers []*PrometheusRequestHeader `protobuf:"bytes,8,rep,name=Headers,proto3" json:"-"`
	Stats   string                     `protobuf:"bytes,9,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *PrometheusRequest) Reset() {
	*x = PrometheusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusRequest) ProtoMessage() {}

func (x *PrometheusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusRequest.ProtoReflect.Descriptor instead.
func (*PrometheusRequest) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{1}
}

func (x *PrometheusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PrometheusRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PrometheusRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PrometheusRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *PrometheusRequest) GetTimeout() *Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *PrometheusRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PrometheusRequest) GetCachingOptions() *CachingOptions {
	if x != nil {
		return x.CachingOptions
	}
	return nil
}

func (x *PrometheusRequest) GetHeaders() []*PrometheusRequestHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *PrometheusRequest) GetStats() string {
	if x != nil {
		return x.Stats
	}
	return ""
}

type PrometheusResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"-"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"-"`
	// @gotags: json:"-"
	Values []string `protobuf:"bytes,2,rep,name=Values,proto3" json:"-"`
}

func (x *PrometheusResponseHeader) Reset() {
	*x = PrometheusResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusResponseHeader) ProtoMessage() {}

func (x *PrometheusResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusResponseHeader.ProtoReflect.Descriptor instead.
func (*PrometheusResponseHeader) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusResponseHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrometheusResponseHeader) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type PrometheusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"status"
	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"status"`
	// @gotags: json:"data,omitempty"
	Data *PrometheusData `protobuf:"bytes,2,opt,name=Data,proto3" json:"data,omitempty"`
	// @gotags: json:"errorType,omitempty"
	ErrorType string `protobuf:"bytes,3,opt,name=ErrorType,proto3" json:"errorType,omitempty"`
	// @gotags: json:"error,omitempty"
	Error string `protobuf:"bytes,4,opt,name=Error,proto3" json:"error,omitempty"`
	// @gotags: json:"-"
	Headers []*PrometheusResponseHeader `protobuf:"bytes,5,rep,name=Headers,proto3" json:"-"`
	// @gotags: json:"warnings,omitempty"
	Warnings []string `protobuf:"bytes,6,rep,name=Warnings,proto3" json:"warnings,omitempty"`
}

func (x *PrometheusResponse) Reset() {
	*x = PrometheusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusResponse) ProtoMessage() {}

func (x *PrometheusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusResponse.ProtoReflect.Descriptor instead.
func (*PrometheusResponse) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{3}
}

func (x *PrometheusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusResponse) GetData() *PrometheusData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PrometheusResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *PrometheusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PrometheusResponse) GetHeaders() []*PrometheusResponseHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *PrometheusResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type PrometheusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"resultType"
	ResultType string `protobuf:"bytes,1,opt,name=ResultType,proto3" json:"resultType"`
	// @gotags: json:"result"
	Result []*SampleStream `protobuf:"bytes,2,rep,name=Result,proto3" json:"result"`
	// @gotags: json:"stats,omitempty"
	Stats *PrometheusResponseStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	// @gotags: json:"analysis"
	Analysis *Analysis `protobuf:"bytes,4,opt,name=analysis,proto3" json:"analysis"`
}

func (x *PrometheusData) Reset() {
	*x = PrometheusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusData) ProtoMessage() {}

func (x *PrometheusData) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusData.ProtoReflect.Descriptor instead.
func (*PrometheusData) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{4}
}

func (x *PrometheusData) GetResultType() string {
	if x != nil {
		return x.ResultType
	}
	return ""
}

func (x *PrometheusData) GetResult() []*SampleStream {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PrometheusData) GetStats() *PrometheusResponseStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *PrometheusData) GetAnalysis() *Analysis {
	if x != nil {
		return x.Analysis
	}
	return nil
}

type PrometheusInstantQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"status"
	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"status"`
	// @gotags: json:"data,omitempty"
	Data *PrometheusInstantQueryData `protobuf:"bytes,2,opt,name=Data,proto3" json:"data,omitempty"`
	// @gotags: json:"errorType,omitempty"
	ErrorType string `protobuf:"bytes,3,opt,name=ErrorType,proto3" json:"errorType,omitempty"`
	// @gotags: json:"error,omitempty"
	Error string `protobuf:"bytes,4,opt,name=Error,proto3" json:"error,omitempty"`
	// @gotags: json:"-"
	Headers []*PrometheusResponseHeader `protobuf:"bytes,5,rep,name=Headers,proto3" json:"-"`
	// @gotags: json:"warnings,omitempty"
	Warnings []string `protobuf:"bytes,6,rep,name=Warnings,proto3" json:"warnings,omitempty"`
}

func (x *PrometheusInstantQueryResponse) Reset() {
	*x = PrometheusInstantQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusInstantQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusInstantQueryResponse) ProtoMessage() {}

func (x *PrometheusInstantQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusInstantQueryResponse.ProtoReflect.Descriptor instead.
func (*PrometheusInstantQueryResponse) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{5}
}

func (x *PrometheusInstantQueryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusInstantQueryResponse) GetData() *PrometheusInstantQueryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PrometheusInstantQueryResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *PrometheusInstantQueryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PrometheusInstantQueryResponse) GetHeaders() []*PrometheusResponseHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *PrometheusInstantQueryResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type PrometheusInstantQueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"resultType"
	ResultType string `protobuf:"bytes,1,opt,name=ResultType,proto3" json:"resultType"`
	// @gotags: json:"result"
	Result *PrometheusInstantQueryResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"result"`
	// @gotags: json:"stats,omitempty"
	Stats *PrometheusResponseStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	// @gotags: json:"analysis"
	Analysis *Analysis `protobuf:"bytes,4,opt,name=analysis,proto3" json:"analysis"`
}

func (x *PrometheusInstantQueryData) Reset() {
	*x = PrometheusInstantQueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusInstantQueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusInstantQueryData) ProtoMessage() {}

func (x *PrometheusInstantQueryData) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusInstantQueryData.ProtoReflect.Descriptor instead.
func (*PrometheusInstantQueryData) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{6}
}

func (x *PrometheusInstantQueryData) GetResultType() string {
	if x != nil {
		return x.ResultType
	}
	return ""
}

func (x *PrometheusInstantQueryData) GetResult() *PrometheusInstantQueryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PrometheusInstantQueryData) GetStats() *PrometheusResponseStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *PrometheusInstantQueryData) GetAnalysis() *Analysis {
	if x != nil {
		return x.Analysis
	}
	return nil
}

type PrometheusInstantQueryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*PrometheusInstantQueryResult_Scalar
	//	*PrometheusInstantQueryResult_StringSample
	//	*PrometheusInstantQueryResult_Vector
	//	*PrometheusInstantQueryResult_Matrix
	Result isPrometheusInstantQueryResult_Result `protobuf_oneof:"result"`
}

func (x *PrometheusInstantQueryResult) Reset() {
	*x = PrometheusInstantQueryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusInstantQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusInstantQueryResult) ProtoMessage() {}

func (x *PrometheusInstantQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusInstantQueryResult.ProtoReflect.Descriptor instead.
func (*PrometheusInstantQueryResult) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{7}
}

func (m *PrometheusInstantQueryResult) GetResult() isPrometheusInstantQueryResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PrometheusInstantQueryResult) GetScalar() *cortexpb.Sample {
	if x, ok := x.GetResult().(*PrometheusInstantQueryResult_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (x *PrometheusInstantQueryResult) GetStringSample() *StringSample {
	if x, ok := x.GetResult().(*PrometheusInstantQueryResult_StringSample); ok {
		return x.StringSample
	}
	return nil
}

func (x *PrometheusInstantQueryResult) GetVector() *Vector {
	if x, ok := x.GetResult().(*PrometheusInstantQueryResult_Vector); ok {
		return x.Vector
	}
	return nil
}

func (x *PrometheusInstantQueryResult) GetMatrix() *Matrix {
	if x, ok := x.GetResult().(*PrometheusInstantQueryResult_Matrix); ok {
		return x.Matrix
	}
	return nil
}

type isPrometheusInstantQueryResult_Result interface {
	isPrometheusInstantQueryResult_Result()
}

type PrometheusInstantQueryResult_Scalar struct {
	Scalar *cortexpb.Sample `protobuf:"bytes,1,opt,name=scalar,proto3,oneof"`
}

type PrometheusInstantQueryResult_StringSample struct {
	StringSample *StringSample `protobuf:"bytes,2,opt,name=stringSample,proto3,oneof"`
}

type PrometheusInstantQueryResult_Vector struct {
	Vector *Vector `protobuf:"bytes,3,opt,name=vector,proto3,oneof"`
}

type PrometheusInstantQueryResult_Matrix struct {
	Matrix *Matrix `protobuf:"bytes,4,opt,name=matrix,proto3,oneof"`
}

func (*PrometheusInstantQueryResult_Scalar) isPrometheusInstantQueryResult_Result() {}

func (*PrometheusInstantQueryResult_StringSample) isPrometheusInstantQueryResult_Result() {}

func (*PrometheusInstantQueryResult_Vector) isPrometheusInstantQueryResult_Result() {}

func (*PrometheusInstantQueryResult_Matrix) isPrometheusInstantQueryResult_Result() {}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Samples []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{8}
}

func (x *Vector) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

type Matrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleStreams []*SampleStream `protobuf:"bytes,1,rep,name=sampleStreams,proto3" json:"sampleStreams,omitempty"`
}

func (x *Matrix) Reset() {
	*x = Matrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix) ProtoMessage() {}

func (x *Matrix) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix.ProtoReflect.Descriptor instead.
func (*Matrix) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{9}
}

func (x *Matrix) GetSampleStreams() []*SampleStream {
	if x != nil {
		return x.SampleStreams
	}
	return nil
}

type PrometheusResponseStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"samples"
	Samples *PrometheusResponseSamplesStats `protobuf:"bytes,1,opt,name=samples,proto3" json:"samples"`
}

func (x *PrometheusResponseStats) Reset() {
	*x = PrometheusResponseStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusResponseStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusResponseStats) ProtoMessage() {}

func (x *PrometheusResponseStats) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusResponseStats.ProtoReflect.Descriptor instead.
func (*PrometheusResponseStats) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{10}
}

func (x *PrometheusResponseStats) GetSamples() *PrometheusResponseSamplesStats {
	if x != nil {
		return x.Samples
	}
	return nil
}

type PrometheusResponseSamplesStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"totalQueryableSamples"
	TotalQueryableSamples int64 `protobuf:"varint,1,opt,name=totalQueryableSamples,proto3" json:"totalQueryableSamples"`
	// @gotags: json:"totalQueryableSamplesPerStep"
	TotalQueryableSamplesPerStep []*PrometheusResponseQueryableSamplesStatsPerStep `protobuf:"bytes,2,rep,name=totalQueryableSamplesPerStep,proto3" json:"totalQueryableSamplesPerStep"`
}

func (x *PrometheusResponseSamplesStats) Reset() {
	*x = PrometheusResponseSamplesStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusResponseSamplesStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusResponseSamplesStats) ProtoMessage() {}

func (x *PrometheusResponseSamplesStats) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusResponseSamplesStats.ProtoReflect.Descriptor instead.
func (*PrometheusResponseSamplesStats) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{11}
}

func (x *PrometheusResponseSamplesStats) GetTotalQueryableSamples() int64 {
	if x != nil {
		return x.TotalQueryableSamples
	}
	return 0
}

func (x *PrometheusResponseSamplesStats) GetTotalQueryableSamplesPerStep() []*PrometheusResponseQueryableSamplesStatsPerStep {
	if x != nil {
		return x.TotalQueryableSamplesPerStep
	}
	return nil
}

type PrometheusResponseQueryableSamplesStatsPerStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMs int64 `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
}

func (x *PrometheusResponseQueryableSamplesStatsPerStep) Reset() {
	*x = PrometheusResponseQueryableSamplesStatsPerStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusResponseQueryableSamplesStatsPerStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusResponseQueryableSamplesStatsPerStep) ProtoMessage() {}

func (x *PrometheusResponseQueryableSamplesStatsPerStep) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusResponseQueryableSamplesStatsPerStep.ProtoReflect.Descriptor instead.
func (*PrometheusResponseQueryableSamplesStatsPerStep) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{12}
}

func (x *PrometheusResponseQueryableSamplesStatsPerStep) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PrometheusResponseQueryableSamplesStatsPerStep) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

type SampleStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"metric"
	Labels []*cortexpb.LabelPair `protobuf:"bytes,1,rep,name=labels,proto3" json:"metric"`
	// @gotags: json:"values"
	Samples []*cortexpb.Sample `protobuf:"bytes,2,rep,name=samples,proto3" json:"values"`
	// @gotags: json:"histogram"
	Histograms []*SampleHistogramPair `protobuf:"bytes,3,rep,name=histograms,proto3" json:"histogram"`
}

func (x *SampleStream) Reset() {
	*x = SampleStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleStream) ProtoMessage() {}

func (x *SampleStream) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleStream.ProtoReflect.Descriptor instead.
func (*SampleStream) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{13}
}

func (x *SampleStream) GetLabels() []*cortexpb.LabelPair {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SampleStream) GetSamples() []*cortexpb.Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

func (x *SampleStream) GetHistograms() []*SampleHistogramPair {
	if x != nil {
		return x.Histograms
	}
	return nil
}

type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"metric"
	Labels []*cortexpb.LabelPair `protobuf:"bytes,1,rep,name=labels,proto3" json:"metric"`
	// @gotags: json:"value"
	SampleValue float64 `protobuf:"fixed64,2,opt,name=sampleValue,proto3" json:"value"`
	Timestamp   int64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// @gotags: json:"histogram"
	Histogram *SampleHistogram `protobuf:"bytes,4,opt,name=histogram,proto3" json:"histogram"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{14}
}

func (x *Sample) GetLabels() []*cortexpb.LabelPair {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Sample) GetSampleValue() float64 {
	if x != nil {
		return x.SampleValue
	}
	return 0
}

func (x *Sample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Sample) GetHistogram() *SampleHistogram {
	if x != nil {
		return x.Histogram
	}
	return nil
}

type StringSample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value       string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMs int64  `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
}

func (x *StringSample) Reset() {
	*x = StringSample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringSample) ProtoMessage() {}

func (x *StringSample) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringSample.ProtoReflect.Descriptor instead.
func (*StringSample) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{15}
}

func (x *StringSample) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringSample) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

type SampleHistogramPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64            `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Histogram *SampleHistogram `protobuf:"bytes,2,opt,name=histogram,proto3" json:"histogram,omitempty"`
}

func (x *SampleHistogramPair) Reset() {
	*x = SampleHistogramPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleHistogramPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleHistogramPair) ProtoMessage() {}

func (x *SampleHistogramPair) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleHistogramPair.ProtoReflect.Descriptor instead.
func (*SampleHistogramPair) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{16}
}

func (x *SampleHistogramPair) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SampleHistogramPair) GetHistogram() *SampleHistogram {
	if x != nil {
		return x.Histogram
	}
	return nil
}

type SampleHistogram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   float64            `protobuf:"fixed64,1,opt,name=count,proto3" json:"count,omitempty"`
	Sum     float64            `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
	Buckets []*HistogramBucket `protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *SampleHistogram) Reset() {
	*x = SampleHistogram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleHistogram) ProtoMessage() {}

func (x *SampleHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleHistogram.ProtoReflect.Descriptor instead.
func (*SampleHistogram) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{17}
}

func (x *SampleHistogram) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SampleHistogram) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *SampleHistogram) GetBuckets() []*HistogramBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type HistogramBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boundaries int32   `protobuf:"varint,1,opt,name=boundaries,proto3" json:"boundaries,omitempty"`
	Lower      float64 `protobuf:"fixed64,2,opt,name=lower,proto3" json:"lower,omitempty"`
	Upper      float64 `protobuf:"fixed64,3,opt,name=upper,proto3" json:"upper,omitempty"`
	Count      float64 `protobuf:"fixed64,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *HistogramBucket) Reset() {
	*x = HistogramBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistogramBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramBucket) ProtoMessage() {}

func (x *HistogramBucket) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramBucket.ProtoReflect.Descriptor instead.
func (*HistogramBucket) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{18}
}

func (x *HistogramBucket) GetBoundaries() int32 {
	if x != nil {
		return x.Boundaries
	}
	return 0
}

func (x *HistogramBucket) GetLower() float64 {
	if x != nil {
		return x.Lower
	}
	return 0
}

func (x *HistogramBucket) GetUpper() float64 {
	if x != nil {
		return x.Upper
	}
	return 0
}

func (x *HistogramBucket) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CachedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	// List of cached responses; non-overlapping and in order.
	// @gotags: json:"extents"
	Extents []*Extent `protobuf:"bytes,2,rep,name=extents,proto3" json:"extents"`
}

func (x *CachedResponse) Reset() {
	*x = CachedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachedResponse) ProtoMessage() {}

func (x *CachedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachedResponse.ProtoReflect.Descriptor instead.
func (*CachedResponse) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{19}
}

func (x *CachedResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CachedResponse) GetExtents() []*Extent {
	if x != nil {
		return x.Extents
	}
	return nil
}

type Extent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"start"
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start"`
	// @gotags: json:"end"
	End int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end"`
	// @gotags: json:"-"
	TraceId string `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"-"`
	// @gotags: json:"response"
	Response *anypb.Any `protobuf:"bytes,5,opt,name=response,proto3" json:"response"`
}

func (x *Extent) Reset() {
	*x = Extent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extent) ProtoMessage() {}

func (x *Extent) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extent.ProtoReflect.Descriptor instead.
func (*Extent) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{20}
}

func (x *Extent) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Extent) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Extent) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Extent) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

type CachingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *CachingOptions) Reset() {
	*x = CachingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CachingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachingOptions) ProtoMessage() {}

func (x *CachingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachingOptions.ProtoReflect.Descriptor instead.
func (*CachingOptions) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{21}
}

func (x *CachingOptions) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Explanation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// @gotags: json:"children"
	Children []*Explanation `protobuf:"bytes,2,rep,name=children,proto3" json:"children"`
}

func (x *Explanation) Reset() {
	*x = Explanation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Explanation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Explanation) ProtoMessage() {}

func (x *Explanation) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Explanation.ProtoReflect.Descriptor instead.
func (*Explanation) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{22}
}

func (x *Explanation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Explanation) GetChildren() []*Explanation {
	if x != nil {
		return x.Children
	}
	return nil
}

// A Duration represents a signed, fixed-length span of time represented
// as a count of seconds and fractions of seconds at nanosecond
// resolution. It is independent of any calendar and concepts like "day"
// or "month". It is related to Timestamp in that the difference between
// two Timestamp values is a Duration and it can be added or subtracted
// from a Timestamp. Range is approximately +-10,000 years.
//
// # Examples
//
// Example 1: Compute Duration from two Timestamps in pseudo code.
//
//	Timestamp start = ...;
//	Timestamp end = ...;
//	Duration duration = ...;
//
//	duration.seconds = end.seconds - start.seconds;
//	duration.nanos = end.nanos - start.nanos;
//
//	if (duration.seconds < 0 && duration.nanos > 0) {
//	  duration.seconds += 1;
//	  duration.nanos -= 1000000000;
//	} else if (duration.seconds > 0 && duration.nanos < 0) {
//	  duration.seconds -= 1;
//	  duration.nanos += 1000000000;
//	}
//
// Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.
//
//	Timestamp start = ...;
//	Duration duration = ...;
//	Timestamp end = ...;
//
//	end.seconds = start.seconds + duration.seconds;
//	end.nanos = start.nanos + duration.nanos;
//
//	if (end.nanos < 0) {
//	  end.seconds -= 1;
//	  end.nanos += 1000000000;
//	} else if (end.nanos >= 1000000000) {
//	  end.seconds += 1;
//	  end.nanos -= 1000000000;
//	}
//
// Example 3: Compute Duration from datetime.timedelta in Python.
//
//	td = datetime.timedelta(days=3, minutes=10)
//	duration = Duration()
//	duration.FromTimedelta(td)
//
// # JSON Mapping
//
// In JSON format, the Duration type is encoded as a string rather than an
// object, where the string ends in the suffix "s" (indicating seconds) and
// is preceded by the number of seconds, with nanoseconds expressed as
// fractional seconds. For example, 3 seconds with 0 nanoseconds should be
// encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should
// be expressed in JSON format as "3.000000001s", and 3 seconds and 1
// microsecond should be expressed in JSON format as "3.000001s".
type Duration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed seconds of the span of time. Must be from -315,576,000,000
	// to +315,576,000,000 inclusive. Note: these bounds are computed from:
	// 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Signed fractions of a second at nanosecond resolution of the span
	// of time. Durations less than one second are represented with a 0
	// `seconds` field and a positive or negative `nanos` field. For durations
	// of one second or more, a non-zero value for the `nanos` field must be
	// of the same sign as the `seconds` field. Must be from -999,999,999
	// to +999,999,999 inclusive.
	Nanos int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *Duration) Reset() {
	*x = Duration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{23}
}

func (x *Duration) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Duration) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type Analysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// @gotags: json:"executionTime"
	ExecutionTime *Duration `protobuf:"bytes,2,opt,name=executionTime,proto3" json:"executionTime"`
	// @gotags: json:"children"
	Children []*Analysis `protobuf:"bytes,3,rep,name=children,proto3" json:"children"`
}

func (x *Analysis) Reset() {
	*x = Analysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Analysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Analysis) ProtoMessage() {}

func (x *Analysis) ProtoReflect() protoreflect.Message {
	mi := &file_cortex_querier_queryrange_queryrange_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Analysis.ProtoReflect.Descriptor instead.
func (*Analysis) Descriptor() ([]byte, []int) {
	return file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP(), []int{24}
}

func (x *Analysis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Analysis) GetExecutionTime() *Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

func (x *Analysis) GetChildren() []*Analysis {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_cortex_querier_queryrange_queryrange_proto protoreflect.FileDescriptor

var file_cortex_querier_queryrange_queryrange_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x1c, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78,
	0x2f, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x45, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x2e,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x46, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x08, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3e, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xeb, 0x01,
	0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x1c,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x36,
	0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x06, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x22, 0x5f, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x22, 0xd6, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x7e, 0x0a, 0x1c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x1c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x22, 0x69, 0x0a, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70,
	0x62, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x70, 0x62, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12,
	0x3f, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0xb0, 0x01, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f,
	0x72, 0x74, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x39, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x22, 0x47, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x22, 0x6e, 0x0a, 0x13,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x39, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x70, 0x0a, 0x0f,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x35, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x73,
	0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x0e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x2c, 0x0a, 0x0e, 0x43,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x56, 0x0a, 0x0b, 0x45, 0x78, 0x70,
	0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x3a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x08, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x61, 0x6e, 0x6f,
	0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x72, 0x74, 0x65, 0x78, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cortex_querier_queryrange_queryrange_proto_rawDescOnce sync.Once
	file_cortex_querier_queryrange_queryrange_proto_rawDescData = file_cortex_querier_queryrange_queryrange_proto_rawDesc
)

func file_cortex_querier_queryrange_queryrange_proto_rawDescGZIP() []byte {
	file_cortex_querier_queryrange_queryrange_proto_rawDescOnce.Do(func() {
		file_cortex_querier_queryrange_queryrange_proto_rawDescData = protoimpl.X.CompressGZIP(file_cortex_querier_queryrange_queryrange_proto_rawDescData)
	})
	return file_cortex_querier_queryrange_queryrange_proto_rawDescData
}

var file_cortex_querier_queryrange_queryrange_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_cortex_querier_queryrange_queryrange_proto_goTypes = []any{
	(*PrometheusRequestHeader)(nil),                        // 0: queryrange.PrometheusRequestHeader
	(*PrometheusRequest)(nil),                              // 1: queryrange.PrometheusRequest
	(*PrometheusResponseHeader)(nil),                       // 2: queryrange.PrometheusResponseHeader
	(*PrometheusResponse)(nil),                             // 3: queryrange.PrometheusResponse
	(*PrometheusData)(nil),                                 // 4: queryrange.PrometheusData
	(*PrometheusInstantQueryResponse)(nil),                 // 5: queryrange.PrometheusInstantQueryResponse
	(*PrometheusInstantQueryData)(nil),                     // 6: queryrange.PrometheusInstantQueryData
	(*PrometheusInstantQueryResult)(nil),                   // 7: queryrange.PrometheusInstantQueryResult
	(*Vector)(nil),                                         // 8: queryrange.Vector
	(*Matrix)(nil),                                         // 9: queryrange.Matrix
	(*PrometheusResponseStats)(nil),                        // 10: queryrange.PrometheusResponseStats
	(*PrometheusResponseSamplesStats)(nil),                 // 11: queryrange.PrometheusResponseSamplesStats
	(*PrometheusResponseQueryableSamplesStatsPerStep)(nil), // 12: queryrange.PrometheusResponseQueryableSamplesStatsPerStep
	(*SampleStream)(nil),                                   // 13: queryrange.SampleStream
	(*Sample)(nil),                                         // 14: queryrange.Sample
	(*StringSample)(nil),                                   // 15: queryrange.StringSample
	(*SampleHistogramPair)(nil),                            // 16: queryrange.SampleHistogramPair
	(*SampleHistogram)(nil),                                // 17: queryrange.SampleHistogram
	(*HistogramBucket)(nil),                                // 18: queryrange.HistogramBucket
	(*CachedResponse)(nil),                                 // 19: queryrange.CachedResponse
	(*Extent)(nil),                                         // 20: queryrange.Extent
	(*CachingOptions)(nil),                                 // 21: queryrange.CachingOptions
	(*Explanation)(nil),                                    // 22: queryrange.Explanation
	(*Duration)(nil),                                       // 23: queryrange.Duration
	(*Analysis)(nil),                                       // 24: queryrange.Analysis
	(*cortexpb.Sample)(nil),                                // 25: cortexpb.Sample
	(*cortexpb.LabelPair)(nil),                             // 26: cortexpb.LabelPair
	(*anypb.Any)(nil),                                      // 27: google.protobuf.Any
}
var file_cortex_querier_queryrange_queryrange_proto_depIdxs = []int32{
	23, // 0: queryrange.PrometheusRequest.timeout:type_name -> queryrange.Duration
	21, // 1: queryrange.PrometheusRequest.cachingOptions:type_name -> queryrange.CachingOptions
	0,  // 2: queryrange.PrometheusRequest.Headers:type_name -> queryrange.PrometheusRequestHeader
	4,  // 3: queryrange.PrometheusResponse.Data:type_name -> queryrange.PrometheusData
	2,  // 4: queryrange.PrometheusResponse.Headers:type_name -> queryrange.PrometheusResponseHeader
	13, // 5: queryrange.PrometheusData.Result:type_name -> queryrange.SampleStream
	10, // 6: queryrange.PrometheusData.stats:type_name -> queryrange.PrometheusResponseStats
	24, // 7: queryrange.PrometheusData.analysis:type_name -> queryrange.Analysis
	6,  // 8: queryrange.PrometheusInstantQueryResponse.Data:type_name -> queryrange.PrometheusInstantQueryData
	2,  // 9: queryrange.PrometheusInstantQueryResponse.Headers:type_name -> queryrange.PrometheusResponseHeader
	7,  // 10: queryrange.PrometheusInstantQueryData.Result:type_name -> queryrange.PrometheusInstantQueryResult
	10, // 11: queryrange.PrometheusInstantQueryData.stats:type_name -> queryrange.PrometheusResponseStats
	24, // 12: queryrange.PrometheusInstantQueryData.analysis:type_name -> queryrange.Analysis
	25, // 13: queryrange.PrometheusInstantQueryResult.scalar:type_name -> cortexpb.Sample
	15, // 14: queryrange.PrometheusInstantQueryResult.stringSample:type_name -> queryrange.StringSample
	8,  // 15: queryrange.PrometheusInstantQueryResult.vector:type_name -> queryrange.Vector
	9,  // 16: queryrange.PrometheusInstantQueryResult.matrix:type_name -> queryrange.Matrix
	14, // 17: queryrange.Vector.samples:type_name -> queryrange.Sample
	13, // 18: queryrange.Matrix.sampleStreams:type_name -> queryrange.SampleStream
	11, // 19: queryrange.PrometheusResponseStats.samples:type_name -> queryrange.PrometheusResponseSamplesStats
	12, // 20: queryrange.PrometheusResponseSamplesStats.totalQueryableSamplesPerStep:type_name -> queryrange.PrometheusResponseQueryableSamplesStatsPerStep
	26, // 21: queryrange.SampleStream.labels:type_name -> cortexpb.LabelPair
	25, // 22: queryrange.SampleStream.samples:type_name -> cortexpb.Sample
	16, // 23: queryrange.SampleStream.histograms:type_name -> queryrange.SampleHistogramPair
	26, // 24: queryrange.Sample.labels:type_name -> cortexpb.LabelPair
	17, // 25: queryrange.Sample.histogram:type_name -> queryrange.SampleHistogram
	17, // 26: queryrange.SampleHistogramPair.histogram:type_name -> queryrange.SampleHistogram
	18, // 27: queryrange.SampleHistogram.buckets:type_name -> queryrange.HistogramBucket
	20, // 28: queryrange.CachedResponse.extents:type_name -> queryrange.Extent
	27, // 29: queryrange.Extent.response:type_name -> google.protobuf.Any
	22, // 30: queryrange.Explanation.children:type_name -> queryrange.Explanation
	23, // 31: queryrange.Analysis.executionTime:type_name -> queryrange.Duration
	24, // 32: queryrange.Analysis.children:type_name -> queryrange.Analysis
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_cortex_querier_queryrange_queryrange_proto_init() }
func file_cortex_querier_queryrange_queryrange_proto_init() {
	if File_cortex_querier_queryrange_queryrange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusRequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusInstantQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusInstantQueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusInstantQueryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Matrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusResponseStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusResponseSamplesStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PrometheusResponseQueryableSamplesStatsPerStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SampleStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*StringSample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SampleHistogramPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SampleHistogram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*HistogramBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CachedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Extent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CachingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Explanation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Duration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cortex_querier_queryrange_queryrange_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Analysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cortex_querier_queryrange_queryrange_proto_msgTypes[7].OneofWrappers = []any{
		(*PrometheusInstantQueryResult_Scalar)(nil),
		(*PrometheusInstantQueryResult_StringSample)(nil),
		(*PrometheusInstantQueryResult_Vector)(nil),
		(*PrometheusInstantQueryResult_Matrix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cortex_querier_queryrange_queryrange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cortex_querier_queryrange_queryrange_proto_goTypes,
		DependencyIndexes: file_cortex_querier_queryrange_queryrange_proto_depIdxs,
		MessageInfos:      file_cortex_querier_queryrange_queryrange_proto_msgTypes,
	}.Build()
	File_cortex_querier_queryrange_queryrange_proto = out.File
	file_cortex_querier_queryrange_queryrange_proto_rawDesc = nil
	file_cortex_querier_queryrange_queryrange_proto_goTypes = nil
	file_cortex_querier_queryrange_queryrange_proto_depIdxs = nil
}
